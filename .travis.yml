notifications:
  email: false

env:
  global:
  - TERM=dumb
  - secure: lUneKWT+r58rTCOpGMzBXu72B+hSX8PUbvFpJzl6mEgwaGOE1yDSSgeuUtXkCg7XKU1IKmEbCRjN9rihzAagXWeYvyBut17tmZuB8yBg5vOH9jQEOsarN8v9L383EI+WD7YDOToUZMWZgQswJFd2fmII1Flglw9N3GIhGFcRWLUbCLU6VjvV4LQHvNv9/cWkZYGdG3ZvRNih1/91YGmzebpPJMxzlJgf/pzfkINGJ3v8g4QIa6wUabmqRb6x1O46jN3YBf7WBivA8+s2cGwtDuJTS0a5LR85NeDZmScd/JV/Ua0LiAlolRT6J5UkRzfKcsobMUzoMe/lY/xWVL9hD1n8ZSvpl8OA4W6xvJD3L8Wo0CKCtZ1t+ZNN43+hQyrrE8oEPHs1DnA+1l2vETnKIM4kE7aa9pHCkIupFtBHxnm5Sby4jIKiMCZs7UjDcHfmkgPiDhzSeZBBtd/g8AXl9FK/5B9N7bty1tYeSyFF1Bt3TbB77CeTyBGBJqPGQ1/kUylYaHRFkHz9oPXGZw26/Bbzf/Hkrnc/AsX5giKW4+qiKxAzehMpQlYERapN8WQXqHlt3RyVD/11mFGBpd6q1deSVy1gWgxcpPs+kyTek5Iyau7gMbklUlT4FhO9QOqK4bVEkXvL/wbhK0pVvh45hScwABgomYp0RNrfAlYnWQ0=

language: java
jdk: oraclejdk8

service:
- docker

addons:
  apt:
    sources:
    - google-chrome
    packages:
    - google-chrome-stable
    - libappindicator1
    - fonts-liberation
    - bash
    - curl
    - libxml2-utils
    - docker-ce

install: true
before_install:
- export CHROME_BIN=/usr/bin/google-chrome
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
#
- sudo add-apt-repository universe -y >/dev/null
- echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends
  tree jq python-pip curl bash sudo >/dev/null
#
- sudo pip install docker-compose httpie >/dev/null 2>&1
#
- curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - >/dev/null
- echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list >/dev/null
- sudo apt-get update -yqq >/dev/null
- sudo apt-get install -yqq --no-install-suggests --no-install-recommends yarn >/dev/null
#
- sudo /etc/init.d/postgresql stop || echo 'command "sudo /etc/init.d/postgresql stop" failed.'
- sudo service mysql stop || echo 'command "sudo service mysql stop" failed.'
#
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 8000 5432 8080 3000 80 >/dev/null

script:
- export root=$(pwd)
#
- ./gradlew composeDown >/dev/null
- ./gradlew composeUp
- ./gradlew >/dev/null
- java -jar ./build/libs/*.jar &
- wait_for 8080
- http :8080
- http :8080/api
- stop_any 8080 8000 80
#
- bash ./build/libs/*.jar &
- wait_for 8080
- http :8080
- http :8080/api
- stop_any 8080 8000 80
- bash gradlew composeDown
#
- ./mvnw -P docker docker-compose:down >/dev/null
- ./mvnw -P docker docker-compose:up
- bash mvnw >/dev/null
- java -jar ./target/*.jar &
- wait_for 8080
- http :8080
- http :8080/api
- stop_any 8080 8000 80
#
- bash ./target/*.jar &
- wait_for 8080
- http :8080
- http :8080/api
- stop_any 8080 8000 80
- ./mvnw -Pdocker docker-compose:down

before_deploy:
- cd ${root}
#- ./gradlew documentation
- ./mvnw -Pdocs
- mkdir -p ./target/generated-docs
- cp -Rf ./target/generated-docs/index.html ./target/generated-docs/404.html

deploy:
  provider: pages
  skip-cleanup: true
  # travis encrypt GITHUB_TOKEN=<your github repo token> --add
  github-token: "$GITHUB_TOKEN"
  keep-history: true
  on:
    branch: master
  local-dir: target/generated-docs
  target_branch: gh-pages

before_cache:
- for item in $(find ~/.gradle -name "*.lock");
    do sudo rm -rf $item ;
  done

cache:
  directories:
  - $HOME/.m2
  - $HOME/.gradle
  - $HOME/.docker
